package uk.ac.abdn.erg.iain.strigidoc;

import java.io.IOException;
import java.net.URI;
import java.net.URL;
import java.util.HashSet;
import java.util.Set;

import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLAnnotation;
import org.semanticweb.owlapi.model.OWLAnnotationProperty;
import org.semanticweb.owlapi.model.OWLDataFactory;
import org.semanticweb.owlapi.model.OWLDataProperty;
import org.semanticweb.owlapi.model.OWLLiteral;
import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLObjectProperty;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyManager;
import org.semanticweb.owlapi.reasoner.ConsoleProgressMonitor;
import org.semanticweb.owlapi.reasoner.NodeSet;
import org.semanticweb.owlapi.reasoner.OWLReasoner;
import org.semanticweb.owlapi.reasoner.OWLReasonerConfiguration;
import org.semanticweb.owlapi.reasoner.OWLReasonerFactory;
import org.semanticweb.owlapi.reasoner.SimpleConfiguration;
import org.semanticweb.owlapi.reasoner.structural.StructuralReasonerFactory;

public class OWLData {

	private OWLOntologyManager m;
	private OWLOntology o;

	public OWLData(String iri) throws OWLOntologyCreationException, IOException {

		m = OWLManager.createOWLOntologyManager();

		o = m.loadOntologyFromOntologyDocument(new URL(iri).openStream());

	}

	public String ontologyIntroduction() {
		Set<OWLAnnotation> values = o.getAnnotations();
		OWLDataFactory fac = m.getOWLDataFactory();
		String introduction = "\\begin{description}\n";

		// Ontology IRI
		IRI ontologyIRI = o.getOntologyID().getOntologyIRI();

		if (o != null) {
			introduction += "\\item[Ontology IRI] \\hfill \\\\\n";
			introduction += "\\url{" + ontologyIRI.toString() + "}\n";
		}

		// Ontology Authors
		Set<String> authors = new HashSet<String>();
		
		for ( OWLAnnotation a : values ) {
			System.out.println(a.getProperty().getIRI().toString());
			
			if ( a.getProperty().getIRI().toString().equals("http://purl.org/dc/elements/1.1/creator") ) {
				authors.add(a.getValue().toString());
			}
		}
		
		if ( authors.size() > 0 ) {
		
			introduction += "\\item[Authors] \\hfill \\\\\n";
			introduction += "\\begin{itemize}\n";
			
		for ( String author : authors ) {
			introduction += "\\item " + author + "\n";
		}
		
		introduction += "\\end{itemize}\n";
		
		}
		
		// Ontology Imports
		
		if (introduction.equals("\\begin{description}\n"))
			return "% -- No introduction values available\n";
		else
			return introduction + "\\end{description}\n";

	}

	public static void main(String args[]) {

		try {
			OWLData data = new OWLData(
					"http://homepages.abdn.ac.uk/i.learmonth/pages/qunits/qunits.owl");

			System.out.println(data.ontologyIntroduction());

		} catch (OWLOntologyCreationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
